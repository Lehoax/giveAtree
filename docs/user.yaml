paths:
  /user/delete/{id}:
      delete:                 # endpoint request type (post request)
          tags:               # Tag property
            - User            # Value of the tag
          summary: delete user by id require authentification
          produces:
          - application/json
          parameters:
          - in: path
            name: id
            description: Numeric id
            schema:
              type: integer
            required: true   # can also be true depending on user preference
          responses:          # server responses
            200:
              description: user object  
  /user/update/{id}:
      post:                 # endpoint request type (post request)
          tags:               # Tag property
            - User            # Value of the tag
          summary: update user by id require authentification
          produces:
          - application/json
          parameters:
          - in: path
            name: id
            description: Numeric id
            schema:
              type: integer
          - in: body 
            name: body params     # name of request, can be any name
            description: update properties of user
            required: true   # can also be true depending on user preference
            schema:           # Schema definition
              $ref: '#/definitions/updateUser' 
          responses:          # server responses
            200:
              description: user object  
              
  /user/{id}:
    get:                 # endpoint request type (post request)
        tags:               # Tag property
          - User            # Value of the tag
        summary: get user by id require authentification
        produces:
        - application/json
        parameters:
          - in: path
            name: id
            description: Numeric id
            schema:
              type: integer
            required: true  
        responses:          
          200:
            description: user object  

  /user/logout:
   get:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: user deconnection
      produces:
      - application/json
      parameters:         # request parameters
        name: sign in     # name of request, can be any name
        description: It enables a user to disconnected
        required: false   # can also be true depending on user preference
      responses:          # server responses
        200:
          description: redirection to = '/' 
  /user/loging:
   post:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: user connection
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: body params    # name of request, can be any name
        description: It enables a user to connect him
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/signIn' 
      responses:          # server responses
        201:
          description: user id
          
  /user/register:          # path of the user from your endpoint
    post:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: creates a new user
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: body params     # name of request, can be any name
        description: It enables a user to create an account
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/signUp' 
      responses:          # server responses
        201:
          description: user id
definitions:        # Schema defination for request body
  updateUser:
    type: object
    properties:
      pseudo: 
        type: string
      street:
        type: string
      cp:
        type: number
      city:
        type: string
  signIn:
      type: object
      properties:
          email:
            format: email
          password:
            type: string
  signUp:
    type: object
    properties:
        pseudo:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          format: email
        password:
          type: string
        street:
          type: string
        cp:
          type: number
        city:
          type: string
        admin: 
          type: boolean
